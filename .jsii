{
  "author": {
    "email": "paulszabopnw@gmail.com",
    "name": "Paul Szabo",
    "roles": [
      "author"
    ]
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "^1.63.0",
    "@aws-cdk/core": "^1.63.0",
    "constructs": "^3.0.4"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "vpc-export-import",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/pszabop/vpc-export-import",
  "jsiiVersion": "1.13.0 (build 385c325)",
  "keywords": [
    "cdk",
    "vpc"
  ],
  "license": "Apache-2.0",
  "name": "vpc-export-import",
  "readme": {
    "markdown": "# AWS CDK Construct - export VPC from one stack, import to another\nUnlike AWS CDK Constructs like DynamoDB, AWS did not provide the ability to easily export a VPC from\none stack and import it in another.  You can do it, but it's complicated, not documented anywhere,\nand makes your code messy.  This Construct was designed to solve that problem.\n\nWhy would one want to export and import a VPC?  Best practices. If for [some reason](https://github.com/aws/aws-cdk/issues/9854)\nyou have to blow away part of your application to redeploy it, you shouldn't destroy your VPCs (or your\ndatabases, or...).  In other words stacks instances should be small and modular.  Just like\nany good code.\n\nSure, you could manually create your VPCs and hard-code references to them, but this makes\nautomatic creation of sandboxes very difficult or impossible.\n\n## Object Structure of a VPC\nper the CDK object model, which mirrors that of the CFT and thus the underlying\nobjects in AWS.\n\n        VPC --- AvailabilityZones []\n            --- Subnets (3 types) []\n                --- RouteTables []\n            --- vpnGatewayId\n            --- vcpCidrBlock\n            --- ...\n\nIf you don't export the IDs of every one of these items and import them, you canmot recreate\nthe VPC without warnings, subtle failures in other entities such as EFS and Lambda, or\noutright failures.  There are no working examples, AFAICT, of doing so.\n\n# Usage\nAnywhere you want to export a VPC from its and all its associated components from its creation\nStack and import the VPC and its associated components into another Stack.\n\n## Module Usage\n\n1. Add Module:\n\n        npm install --save cdk-vpc-export-import\n\n1. Import Statement:\n\n        import VpcPortable from 'cdk-vpc-export-import';\n\n1. General usage:\n\nUse like any `Ec2.Vpc`.  Call the function `exportToStackOutput()` to export from the stack, and in the\nstack that needs to use the vpc instance, call the static function `importFromStackOutput()`, which\nfollows the similar pattern to other `fromXXX()` in the CDK.  The object returned is a `Ec2.Vpc`\nthat can be assigned as the network for a Lambda function, the network for an EFS file system, etc.\n\n\n1. Use of global `exports` namespace on AWS\n\nThe stack exports functionality of CFT/CDK is used, which is a global namespace.  The name is mangled\nwith the stack name, the node.id of your VPC instance, and the names of the fields.  If for some unlikely\nreason you get a collision or see problem please file an issue.  It would be easy to implement options\nfor alternative naming algorithms.\n\n# Testing And Development\nThe development system is based on [Projen](importFromStackOutput), which while powerful and helpful,\nunfortunately doesn't have good documentation for a new user.\n\n## Interactive Unit Testing and Development\n1. Run Docker Compose:\n\n        docker-compose run app  /bin/bash\n\n1. Navigate to the directory where the source code is located:\n\n        cd /home/code\n\n1. Run NPM install\n\n        npm install\n\n1. Compile\n\n        yarn run compile\n\n1. Run the unit tests\n\n        yarn run test\n\n1. Automatically run compile every time you save a file\n\n        yarn run watch\n\n1. Automatically run tests every time you save a test\n\n        yarn run test:watch\n\n1. Adding a module dependency.  Do not edit package.json.\n\n        <editor> .projen.js\n\n## Integration Test\nThis needs to be automated.  Why the CDK CLI doesn't have a wrapper NPM package by now, I have no idea.\nI guess that should be next on the list of things I should write.\n\n1. Change to the CD integration test directory\n\n        cd integration-test\n\n1. Run the build command. This will cause a synthesis of the stack and unit tests for the stack to run\n\n        yarn run build\n\n1. Build the lambda code.  AFAICT no toolchain handles this correctly\n\n        cd lambdaSrc\n        npm install\n        cd ..\n\n1. Run the deploy commands for the two stacks.  Assumes you have the environment variables or ~/.aws/credentials file mounted\n\n        yarn run deploy dbStack\n        yarn run deploy vpcStack\n        yarn run deploy apiStack\n\n1. Get the URL for the api gateway in the stack output via copy and paste into the next commands\n\n1. Run the integration test that tests the network connectivity by doing a POST and a GET.  Make not of the ID for the GET\n\n        curl -X POST -H \"Content-Type: application/json\" -d '{\"username\":\"xyz\",\"email\":\"xyz@example.com\"}' <apigatewayurl>/db/id\n        curl -s <apigatewayurl>/prod/db/<id returned from the POST>\n\n1. destroy the two stacks.  Note the reverse order due to dependencies\n\n        yarn run cdk destroy apiStack\n        yarn run cdk destroy vpcStack\n        yarn run cdk destroy apiStack\n\n\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pszabop/vpc-export-import"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "js": {
      "npm": "vpc-export-import"
    }
  },
  "types": {
    "vpc-export-import.VpcPortable": {
      "assembly": "vpc-export-import",
      "base": "@aws-cdk/aws-ec2.Vpc",
      "docs": {
        "stability": "stable"
      },
      "fqn": "vpc-export-import.VpcPortable",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/index.ts",
          "line": 55
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/index.ts",
            "line": 11
          },
          "name": "getOtherStackOutput",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "otherStackName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "otherStackNodeId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/index.ts",
            "line": 17
          },
          "name": "getOtherStackOutputList",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "otherStackName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "otherStackNodeId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "brief": "fromVpcAttributes() that fetches the attributes using a naming convetion for stack\nexport/import."
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/index.ts",
            "line": 28
          },
          "name": "importFromStackOutput",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "otherStackName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "otherStackNodeId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "vpc-export-import.VpcPortable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/index.ts",
            "line": 7
          },
          "name": "mangleStackName",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "brief": "export Vpc and all components as stack output"
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/index.ts",
            "line": 87
          },
          "name": "exportToStackOutput"
        },
        {
          "docs": {
            "custom": {
              "brief": "publish a legal stack output with globally unique key"
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/index.ts",
            "line": 75
          },
          "name": "publishStackOutput",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "brief": "publish a legal stack list output with globally unique key"
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/index.ts",
            "line": 62
          },
          "name": "publishStackOutputList",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        }
      ],
      "name": "VpcPortable"
    }
  },
  "version": "0.0.4",
  "fingerprint": "0iVKBRyrQuaOnfivGnq+6d9nd/2jaApibRoUJNRYLJU="
}
